<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Chess Move Generation</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <aside class="w-64 bg-gray-800 text-white flex-shrink-0">
            <div class="p-6 text-2xl font-bold border-b border-gray-700">
                <i class="fas fa-chess-knight mr-2"></i>
                <span>ChessGen</span>
            </div>
            <nav class="mt-6">
                <a asp-controller="Home" asp-action="Index" class="flex items-center px-6 py-3 text-gray-300 hover:bg-gray-700 hover:text-white">
                    <i class="fas fa-tachometer-alt w-6 h-6 mr-3"></i>
                    <span>Dashboard</span>
                </a>
                <a asp-controller="ChessEngine" asp-action="Create" class="flex items-center px-6 py-3 text-gray-300 hover:bg-gray-700 hover:text-white">
                    <i class="fas fa-plus-circle w-6 h-6 mr-3"></i>
                    <span>New Generation</span>
                </a>
                <a asp-controller="ChessEngine" asp-action="Upload" class="flex items-center px-6 py-3 text-gray-300 hover:bg-gray-700 hover:text-white">
                    <i class="fas fa-upload w-6 h-6 mr-3"></i>
                    <span>Upload Engine</span>
                </a>
                <a asp-controller="ChessEngine" asp-action="Status" class="flex items-center px-6 py-3 text-gray-300 hover:bg-gray-700 hover:text-white">
                    <i class="fas fa-tasks w-6 h-6 mr-3"></i>
                    <span>Batch Status</span>
                </a>
                <a asp-controller="GameViewer" asp-action="Index" class="flex items-center px-6 py-3 text-gray-300 hover:bg-gray-700 hover:text-white">
                    <i class="fas fa-chess-board w-6 h-6 mr-3"></i>
                    <span>Game Viewer</span>
                </a>
                <a asp-controller="Maintenance" asp-action="Index" class="flex items-center px-6 py-3 text-gray-300 hover:bg-gray-700 hover:text-white">
                    <i class="fas fa-tools w-6 h-6 mr-3"></i>
                    <span>Maintenance</span>
                </a>
            </nav>
        </aside>

        <!-- Main Content -->
        <div class="flex-1 flex flex-col overflow-hidden">
            <header class="bg-gray-800 border-b border-gray-700">
                <div class="flex items-center justify-between p-4">
                    <div>
                        <h1 class="text-xl font-semibold">@ViewData["Title"]</h1>
                    </div>
                    <div id="connection-status" class="flex items-center">
                        <span class="text-sm text-gray-400 mr-2">Connection:</span>
                        <span id="connection-indicator" class="text-sm">
                            <i class="fas fa-circle text-gray-500"></i> Disconnected
                        </span>
                    </div>
                </div>
            </header>
            <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-900 p-6">
                @RenderBody()
            </main>
        </div>
    </div>

    <!-- Scripts - Load in correct order -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.bundle.min.js"></script>

    <!-- SignalR must be loaded before any code that uses it -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>

    <!-- Global SignalR connection script -->
    <script>
        // Wait for SignalR to be loaded
        if (typeof signalR !== 'undefined') {
            // Create global connection
            window.dashboardConnection = new signalR.HubConnectionBuilder()
                .withUrl("/dashboardHub")
                .withAutomaticReconnect([0, 2000, 5000, 10000, 30000]) // Reconnect delays
                .configureLogging(signalR.LogLevel.Warning)
                .build();

            // Connection status indicator
            function updateConnectionStatus(status, color, icon) {
                const indicator = document.getElementById('connection-indicator');
                if (indicator) {
                    indicator.innerHTML = `<i class="fas fa-circle text-${color}"></i> ${status}`;
                }
            }

            // Connection event handlers
            window.dashboardConnection.onreconnecting(() => {
                console.log("SignalR Reconnecting...");
                updateConnectionStatus('Reconnecting...', 'yellow-500', 'circle');
            });

            window.dashboardConnection.onreconnected((connectionId) => {
                console.log("SignalR Reconnected:", connectionId);
                updateConnectionStatus('Connected', 'green-500', 'circle');
            });

            window.dashboardConnection.onclose((error) => {
                console.error("SignalR Connection closed:", error);
                updateConnectionStatus('Disconnected', 'red-500', 'circle');
            });

            // Start the connection
            async function startConnection() {
                try {
                    await window.dashboardConnection.start();
                    console.log("SignalR Connected:", window.dashboardConnection.connectionId);
                    updateConnectionStatus('Connected', 'green-500', 'circle');
                } catch (err) {
                    console.error("SignalR Connection Error:", err);
                    updateConnectionStatus('Error', 'red-500', 'exclamation-triangle');
                    // Retry after 5 seconds
                    setTimeout(startConnection, 5000);
                }
            }

            // Start connection when page loads
            startConnection();

            // Global error handler for SignalR
            window.dashboardConnection.on("error", (error) => {
                console.error("SignalR Hub Error:", error);
            });

        } else {
            console.error("SignalR library not loaded!");
        }
    </script>

    <!-- Site scripts -->
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Page-specific scripts -->
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>